ARG BASE_IMAGE
FROM ${BASE_IMAGE} as build
ARG YOLOV4_VERSION
USER root
ENV os=ubuntu2004
ENV cuda_version_dashed=11-4
ENV cudnn_version=8.2.4.15-1+cuda11.4
ENV PATH=$PATH:/usr/local/cuda-11.4/bin:/home/robolaunch/.local/bin
RUN apt-get update
RUN apt-get install -y git build-essential libopencv-dev python3-opencv vim mlocate python3-pip
RUN wget https://nexus.robolaunch.cloud/repository/download/cuda_11.4.1_470.57.02_linux.run
RUN apt-get install -y libcudnn8=${cudnn_version} libcudnn8-dev=${cudnn_version}
RUN apt-mark hold libcudnn8 libcudnn8-dev
RUN echo 'export PATH=$PATH/usr/local/cuda-11.4/bin:/home/robolaunch/.local/bin' >> ~/.bashrc
RUN sudo bash cuda_11.4.1_470.57.02_linux.run --silent --toolkit
USER robolaunch
RUN echo 'export PATH=$PATH/usr/local/cuda-11.4/bin:/home/robolaunch/.local/bin' >> ~/.bashrc
ENV PATH=$PATH/usr/local/cuda-11.4/bin:/home/robolaunch/.local/bin
RUN mkdir /home/robolaunch/yolov4
WORKDIR /home/robolaunch/yolov4
RUN git clone -b ${YOLOV4_VERSION} https://github.com/AlexeyAB/darknet.git
WORKDIR /home/robolaunch/yolov4/darknet
RUN sed -i 's/GPU=0/GPU=1/' Makefile
RUN sed -i 's/CUDNN=0/CUDNN=1/' Makefile
RUN sed -i 's/OPENCV=0/OPENCV=1/' Makefile
RUN sed -i 's/# ARCH= -gencode arch=compute_75/ARCH= -gencode arch=compute_75/' Makefile
ENV PATH=$PATH:/usr/local/cuda-11.4/bin:/home/robolaunch/.local/bin
RUN wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights
#RUN make
WORKDIR /home/robolaunch
USER root
